Ecco una lista dei principali comandi Git, con una breve descrizione del loro utilizzo:

Configurazione iniziale:

git init: Inizializza un nuovo repository Git nella cartella corrente.
git config --global user.name "Tuo Nome": Imposta il tuo nome utente globalmente.
git config --global user.email "tua_email@esempio.com": Imposta la tua email globalmente.

Gestione dei file:

git add .: Aggiunge tutti i file modificati alla staging area.
git add nome_file: Aggiunge un file specifico alla staging area.
git status: Mostra lo stato dei file (modificati, aggiunti, eliminati).
git diff: Mostra le differenze tra i file modificati e l'ultima versione committata.

Commit:

git commit -m "Messaggio di commit": Crea un nuovo commit con le modifiche nella staging area.

Branch:

git branch: Mostra la lista dei branch.
git checkout -b nome_branch: Crea un nuovo branch e passa ad esso.
git checkout nome_branch: Passa ad un branch esistente.
git merge nome_branch: Unisce le modifiche di un branch nel branch corrente.

Repository remoti:

git clone <url_repository>: Clona un repository remoto.
git remote add origin <url_repository>: Aggiunge un repository remoto.
git push origin nome_branch: Invia i commit locali al repository remoto.
git pull origin nome_branch: Scarica e unisce gli aggiornamenti dal repository remoto.

History e navigazione:

git log: Mostra la history dei commit.
git checkout <hash_commit>: Passa ad un commit specifico (puoi trovare l'hash con git log).

Annullamento e ripristino:

git reset HEAD nome_file: Rimuove un file dalla staging area.
git checkout -- nome_file: Ripristina un file modificato all'ultima versione committata.
git revert <hash_commit>: Annulla le modifiche di un commit specifico.

Altri comandi utili:

git rm nome_file: Elimina un file dal repository.
git mv vecchio_nome nuovo_nome: Rinomina un file.
git tag: Crea un tag per marcare un commit specifico (es. una versione del software).
git stash: Salva temporaneamente le modifiche non committate.
git stash pop: Ripristina le modifiche salvate con git stash.